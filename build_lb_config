#!/usr/bin/env bash

###
### Interesting constants
###
LB_VIP_IF_NAME=eth0:1
LB_VIP_IF_IP=10.0.0.101
LB_VIP_IF_PREFIX_LEN=24
LB_SRC_IF_NAME=eth0:2
LB_SRC_IF_IP=10.0.0.102
LB_SRC_IF_PREFIX_LEN=24
# One AS for now
AS1_DST_IF_NAME=eth0:3
AS1_DST_IF_IP=10.0.0.103
AS1_DST_IF_PREFIX_LEN=24


###
### Uninteresting constants
###
VPP_CONFIG_FILE="$(dirname $0)/test_lb.conf"
VPP_TMP_CLI_CONFIG_FILE="/tmp/vpp_cli_config"
VPP_RUN_SCRIPT="$(dirname $0)/run_vpp"


###
### Functions
###
# Add item to VPP CLI config
rm -f "$VPP_TMP_CLI_CONFIG_FILE"
cat << END > "$VPP_RUN_SCRIPT"
#!/usr/bin/env bash
sudo vpp -c ./test_lb.conf
# @@@ check RC
sleep 5
END
# touch "$VPP_TMP_CLI_CONFIG_FILE"
function vpp_add_cli_config() {
    echo "  $*" >> "$VPP_TMP_CLI_CONFIG_FILE"
    # Shouldn't need both of these, but running VPP with the `-c` option seems to ignore `unix-cli` config...
    echo "echo Running command: $*" >> "$VPP_RUN_SCRIPT"
    echo "vppctl $*" >> "$VPP_RUN_SCRIPT"
}


###
### VPP
###

# Add VIP and SRC interfaces to VPP
vpp_add_cli_config create host-interface name ${LB_VIP_IF_NAME}
vpp_add_cli_config create host-interface name ${LB_SRC_IF_NAME}

# Set up the LB source IP
# @@@ This line causes bad tcp checksum errors (without going through LB)
# vpp_add_cli_config set int ip address host-${LB_VIP_IF_NAME} ${LB_VIP_IF_IP}/${LB_VIP_IF_PREFIX_LEN}
vpp_add_cli_config set int ip address host-${LB_SRC_IF_NAME} ${LB_SRC_IF_IP}/${LB_SRC_IF_PREFIX_LEN}

# Bring these up
vpp_add_cli_config set interface state host-${LB_VIP_IF_NAME} up
vpp_add_cli_config set interface state host-${LB_SRC_IF_NAME} up


###
### VPP LB
###

# Set up the LB to send from the source address
vpp_add_cli_config lb conf ip4-src-address ${LB_SRC_IF_IP} buckets 32

# Set the LB VIP
vpp_add_cli_config lb vip ${LB_VIP_IF_IP}/${LB_VIP_IF_PREFIX_LEN} encap gre4

# Add an AS
vpp_add_cli_config lb as ${LB_VIP_IF_IP}/${LB_VIP_IF_PREFIX_LEN} ${AS1_DST_IF_IP}


###
### GRE
###

# Create GRE tunnel in VPP (seems to make no difference at present)
vpp_add_cli_config create gre tunnel src ${LB_SRC_IF_IP} dst ${AS1_DST_IF_IP}

# Two options here it seems - neither work...
USE_GRETAP=1
if [[ $USE_GRETAP -ne 0 ]]
then
    # Use gretap
    sudo ip link add gre2 type gretap remote ${LB_SRC_IF_IP} local ${AS1_DST_IF_IP} ttl 255
    sudo ip link set gre2 up

    # Do we need to have a route to the AS destination through the GRE tunnel?
    sudo ip addr add ${LB_VIP_IF_IP}/${LB_VIP_IF_PREFIX_LEN} dev gre2
    sudo ip addr add ${AS1_DST_IF_IP}/${AS1_DST_IF_PREFIX_LEN} dev gre2
else
    sudo ip tunnel add gre1 mode gre remote ${LB_SRC_IF_IP} local ${AS1_DST_IF_IP} ttl 255
    sudo ip link set gre1 up

    # Do we need to have a route to the AS destination through the GRE tunnel?
    sudo ip addr add ${LB_VIP_IF_IP}/${LB_VIP_IF_PREFIX_LEN} dev gre1
    sudo ip addr add ${AS1_DST_IF_IP}/${AS1_DST_IF_PREFIX_LEN} dev gre1
fi


###
### Display config
###
vpp_add_cli_config show interface
vpp_add_cli_config show lb
vpp_add_cli_config show lb vip verbose
vpp_add_cli_config show ip fib


###
### Output the config
###
echo "unix-cli {" > "$VPP_CONFIG_FILE"
cat "$VPP_TMP_CLI_CONFIG_FILE" >> "$VPP_CONFIG_FILE"
cat << CONFIG >> "$VPP_CONFIG_FILE"
}
unix {
  log /tmp/vpp.log
  cli-listen localhost:5002
}
api-trace {
  on
}
CONFIG

###
### Make vpp run script executable
###
chmod +x "$VPP_RUN_SCRIPT"
